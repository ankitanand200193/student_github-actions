name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest python-dotenv
      
      - name: Run tests
        run: |
          pytest -v
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          PYTHONPATH: ${{ github.workspace }}

  deploy-staging:
      needs: test
      if: github.ref == 'refs/heads/staging'
      runs-on: ubuntu-latest
      
      steps:
        - uses: actions/checkout@v2
        
        - name: Copy files to staging
          uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.STAGING_HOST }}
            username: ${{ secrets.STAGING_USER }}
            key: ${{ secrets.AWS_SSH_KEY }}
            source: "."
            target: "~/app"
        
        - name: Deploy to Staging
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.STAGING_HOST }}
            username: ${{ secrets.STAGING_USER }}
            key: ${{ secrets.AWS_SSH_KEY }}
            script: |
              set +e  # Don't exit on error
              
              echo "Setting up application..."
              cd ~/app
              
              echo "Cleaning up existing process..."
              pkill -f "python app.py" || true
              sleep 2
              
              echo "Setting up Python environment..."
              python3 -m venv venv || true
              source venv/bin/activate
              
              echo "Installing requirements..."
              pip install -r requirements.txt
              
              echo "Setting up environment variables..."
              echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
              
              set -e  # Exit on error from this point
              
              echo "Starting application..."
              nohup python app.py > app.log 2>&1 &
              
              echo "Waiting for application to start..."
              sleep 5
              
              # Check if app is running
              if ps aux | grep -v grep | grep "python app.py" > /dev/null; then
                  echo "Application started successfully"
                  echo "Process information:"
                  ps aux | grep "python app.py" | grep -v grep
                  echo "Log contents:"
                  tail -n 10 app.log
                  exit 0
              else
                  echo "Application failed to start"
                  echo "Full log contents:"
                  cat app.log
                  exit 1
              fi

  deploy-production:
    needs: [test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Copy files to production
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          source: "."
          target: "~/app"
      
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            echo "Setting up application..."
            cd ~/app
            
            echo "Killing existing process if any..."
            pkill -f "python app.py" || true
            
            echo "Setting up Python environment..."
            python3 -m venv venv
            source venv/bin/activate
            
            echo "Installing requirements..."
            pip install -r requirements.txt
            
            echo "Setting up environment variables..."
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
            
            echo "Starting application..."
            nohup python app.py > app.log 2>&1 &
            
            echo "Waiting for application to start..."
            sleep 5
            
            echo "Checking if application is running..."
            if pgrep -f "python app.py" > /dev/null; then
                echo "Application started successfully"
                tail -n 10 app.log
            else
                echo "Application failed to start"
                cat app.log
                exit 1
            fi
